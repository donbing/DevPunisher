using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using BuildFetcher.AutoGeneratedClasses;
using BuildFetcher;
using NUnit.Framework;
using NUnit.Framework.Constraints;
using System.Configuration;

namespace BuildFetcher_Tests
{
    [TestFixture]
    public class WhenRetrievingLastBuildForLiveJob
    {
        Build build;
        Job job;
        const string JobName = "ruby";

        [TestFixtureSetUp]
        public void setup()
        {
			var rootUri = ConfigurationManager.AppSettings["HudsonRootUri"];
			
            var xmlFetcher = new HudsonJobXmlFetcher();
            var jobFetcher = new HudsonJobFetcher(xmlFetcher);
			
            var buildxmlFetcher = new HudsonBuildXmlFetcher();
            var buildFetcher = new HudsonBuildFetcher(buildxmlFetcher);

            job = jobFetcher.GetJobFromJobName(JobName);

            build = job.GetLastBuildFrom(buildFetcher);
        }

        [Test]
        public void ShouldHaveBuildNumberMatchingBuildsLastBuildNumber()
        {
            Assert.AreEqual(build.number, job.LastCompletedBuild.number);
        }

        [Test]
        public void ShouldHaveResultOfSuccessFailureOrEmpty()
        {
			var acceptableBuildResults = new[] { "SUCCESS", "FAILURE", string.Empty, "UNSTABLE" };
			Assert.Contains(build.result, acceptableBuildResults);
        }

        [Test]
        public void ShouldHaveAtLEastOneCulpritName()
        {
            Assert.IsNotNull(build.culprit[0].fullName);
        }
    }
}
